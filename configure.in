m4_define([libart_major_version], [2])
m4_define([libart_minor_version], [3])
m4_define([libart_micro_version], [21])
m4_define([libart_version],
          [libart_major_version.libart_minor_version.libart_micro_version])

AC_INIT([libart-lgpl],[libart_version],[http://bugzilla.gnome.org/enter_bug.cgi?product=libart],[libart_lgpl])

AC_CONFIG_HEADERS([config.h])

LIBART_MAJOR_VERSION=libart_major_version
LIBART_MINOR_VERSION=libart_minor_version
LIBART_MICRO_VERSION=libart_micro_version
LIBART_VERSION=libart_version

LIBART_VERSION_INFO=`expr $LIBART_MAJOR_VERSION + $LIBART_MINOR_VERSION`:$LIBART_MICRO_VERSION:$LIBART_MINOR_VERSION

AC_SUBST(LIBART_MAJOR_VERSION)
AC_SUBST(LIBART_MINOR_VERSION)
AC_SUBST(LIBART_MICRO_VERSION)
AC_SUBST(LIBART_VERSION)
AC_SUBST(LIBART_VERSION_INFO)

AM_INIT_AUTOMAKE([1.9 foreign no-dist-gzip dist-bzip2])

AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],
		    , enable_ansi=no)

AC_PROG_CC
AC_PROG_CPP
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AM_MAINTAINER_MODE

AC_MSG_CHECKING([for some Win32 platform])
case "$host" in
  *-*-mingw*|*-*-cygwin*)
    platform_win32=yes
    ;;
  *)
    platform_win32=no
    ;;
esac
AC_MSG_RESULT([$platform_win32])
AM_CONDITIONAL(PLATFORM_WIN32, test "$platform_win32" = "yes")

AC_MSG_CHECKING([for native Win32])
case "$host" in
  *-*-mingw*)
    os_win32=yes
    ;;
  *)
    os_win32=no
    ;;
esac
AC_MSG_RESULT([$os_win32])
AM_CONDITIONAL(OS_WIN32, test "$os_win32" = "yes")

if test "$os_win32" = "yes"; then
  AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
fi
AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wmissing-prototypes[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wmissing-prototypes" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi
changequote([,])dnl

AC_FUNC_ALLOCA

AC_C_BIGENDIAN

AC_CHECK_SIZEOF(char)
AC_SUBST(ART_SIZEOF_CHAR, $ac_cv_sizeof_char)
AC_CHECK_SIZEOF(short)
AC_SUBST(ART_SIZEOF_SHORT, $ac_cv_sizeof_short)
AC_CHECK_SIZEOF(int)
AC_SUBST(ART_SIZEOF_INT, $ac_cv_sizeof_int)
AC_CHECK_SIZEOF(long)
AC_SUBST(ART_SIZEOF_LONG, $ac_cv_sizeof_long)

AC_CONFIG_FILES([
libart-features.h
Makefile
libart-2.0.pc
libart-2.0-uninstalled.pc
libart-zip])

AC_CONFIG_FILES([libart-config],[chmod +x libart-config])
AC_CONFIG_FILES([gen_art_config.sh],[chmod +x gen_art_config.sh])

AC_OUTPUT
